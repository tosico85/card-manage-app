{"version":3,"sources":["AppBar.js","Card.js","AddCard.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","CardInfo","props","state","isModify","this","setState","inputBalance","document","querySelector","modifiedInfo","Object","assign","onChangeBalance","onDeleteCard","balance","value","cardname","summary","total","type","placeholder","Button","onClick","saveBalance","color","setCancal","setModify","IconButton","aria-label","fontSize","React","Component","ButtonAddCard","isAdding","onAddCard","saveCardInfo","addCard","App","isLoading","cardList","axios","get","cardlist","data","console","log","getCardList","cardInfo","index","card","concat","refreshData","push","splice","method","url","then","result","Array","from","map","Card","key","handleChageBalance","deleteCard","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.532e9fe7.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\" className={classes.title}>\n            My card list\n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\n//import PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n//import { render } from \"@testing-library/react\";\n\nclass CardInfo extends React.Component {\n\t//console.log(cardname);\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t//const { cardname, summary, balance, total, color } = props;\n\t\tthis.state = { isModify: false };\n\t}\n\n\tsetModify() {\n\t\tthis.setState({ isModify: true });\n\t}\n\n\tsetCancal() {\n\t\tthis.setState({ isModify: false });\n\t}\n\n\tsaveBalance() {\n\t\tconst inputBalance = document.querySelector(\".input-money__modify\");\n\t\tconst modifiedInfo = Object.assign({}, this.props);\n\t\tdelete modifiedInfo.onChangeBalance;\n\t\tdelete modifiedInfo.onDeleteCard;\n\t\t//console.log(inputBalance.value);\n\n\t\tmodifiedInfo.balance = inputBalance.value;\n\t\tthis.props.onChangeBalance(modifiedInfo);\n\t\tthis.setState({ isModify: false });\n\t}\n\n\trender() {\n\t\tconst { isModify } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"card_content\">\n\t\t\t\t<div className=\"card_info\">\n\t\t\t\t\t<h3 className=\"card_name\">{this.props.cardname}</h3>\n\t\t\t\t\t<span className=\"card_summary\">{this.props.summary}</span>\n\t\t\t\t\t<span className=\"card_money\">\n\t\t\t\t\t\t{this.props.balance}/{this.props.total}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"modify_card_info\">\n\t\t\t\t\t{isModify ? (\n\t\t\t\t\t\t<div className=\"input-form\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tclassName=\"input-money__modify\"\n\t\t\t\t\t\t\t\tplaceholder=\"수정금액 입력\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"modify_balance\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.saveBalance();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"primary\">\n\t\t\t\t\t\t\t\t저장\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"modify_cancel\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setCancal();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"primary\">\n\t\t\t\t\t\t\t\t취소\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"modify_balance\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setModify();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor=\"primary\">\n\t\t\t\t\t\t\t금액수정\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={() => this.props.onDeleteCard()}\n\t\t\t\t\t\taria-label=\"delete\">\n\t\t\t\t\t\t<DeleteIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/* CardInfo.prototype = {\n\tcardname: PropTypes.string.isRequired,\n\tsummary: PropTypes.string.isRequired,\n\tbalance: PropTypes.number.isRequired,\n\ttotal: PropTypes.number.isRequired,\n\tcolor: PropTypes.string.isRequired,\n};\n */\nexport default CardInfo;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nclass ButtonAddCard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isAdding: false };\n\t}\n\n\taddCard() {\n\t\tthis.setState({ isAdding: true });\n\t}\n\n\tsetCancal() {\n\t\tthis.setState({ isAdding: false });\n\t}\n\n\tsaveCardInfo() {\n\t\tconst cardname = document.querySelector(\".card-info__name\").value;\n\t\tconst summary = document.querySelector(\".card-info__summary\").value;\n\t\tconst total = document.querySelector(\".card-info__total\").value;\n\n\t\tthis.props.onAddCard({\n\t\t\tcardname,\n\t\t\tsummary,\n\t\t\ttotal,\n\t\t\tbalance: total,\n\t\t\tcolor: \"\",\n\t\t});\n\n\t\tthis.setState({ isAdding: false });\n\t}\n\n\trender() {\n\t\tconst { isAdding } = this.state;\n\t\treturn (\n\t\t\t<div className=\"card_add_content\">\n\t\t\t\t{!isAdding ? (\n\t\t\t\t\t<div className=\"card_add_button\" onClick={() => this.addCard()}>\n\t\t\t\t\t\t<h1>+</h1>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"card_input_content\">\n\t\t\t\t\t\t<div className=\"card_info\">\n\t\t\t\t\t\t\t<div className=\"card-input-box\">\n\t\t\t\t\t\t\t\t<h4>카드명</h4>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"card-info__name\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"카드명 입력\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-input-box\">\n\t\t\t\t\t\t\t\t<h4>카드 설명</h4>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"card-info__summary\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"카드 설명 입력\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-input-box\">\n\t\t\t\t\t\t\t\t<h4>잔액</h4>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tclassName=\"card-info__total\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"잔액 입력\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"insert_card_info\">\n\t\t\t\t\t\t\t<div className=\"input-form\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"insert_balance\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.saveCardInfo();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\">\n\t\t\t\t\t\t\t\t\t저장\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"insert_cancel\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.setCancal();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\">\n\t\t\t\t\t\t\t\t\t취소\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ButtonAddCard;\n","import React from \"react\";\nimport axios from \"axios\";\nimport ButtonAppBar from \"./AppBar\";\nimport CardInfo from \"./Card\";\nimport ButtonAddCard from \"./AddCard\";\nimport \"./App.css\";\n\n/* function getCardList() {}\nasync getMovies() {\n  const {\n    data: {\n      data: { movies },\n    },\n  } = await axios.get(\n    'https://yts-proxy.now.sh/list_movies.json?sort_by=rating',\n  );\n  console.log(movies);\n  this.setState({ isLoading: false, movies });\n} */\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isLoading: true, cardList: [] };\n\t}\n\n\tasync getCardList() {\n\t\t/* const { cardList } = {\n\t\t\tcardList: [\n\t\t\t\t{\n\t\t\t\t\tcardname: \"경기지역화폐\",\n\t\t\t\t\tsummary: \"배달음식 전용\",\n\t\t\t\t\tbalance: 100000,\n\t\t\t\t\ttotal: 100000,\n\t\t\t\t\tcolor: \"\",\n\t\t\t\t},\n\t\t\t],\n\t\t}; */\n\t\t//\"https://cardlist-manage.herokuapp.com/data/cardlist.json\"\n\t\tlet {\n\t\t\tdata: { cardlist },\n\t\t\t//} = await axios.get(\"http://localhost:3001/cards/list\");\n\t\t} = await axios.get(\"https://cardlist-manage.herokuapp.com/cards/list\");\n\n\t\tconsole.log(cardlist);\n\t\tcardlist = cardlist || [];\n\t\tthis.setState({ isLoading: false, cardList: cardlist });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getCardList();\n\t}\n\n\thandleChageBalance(cardInfo, index) {\n\t\tlet card = this.state.cardList.concat();\n\t\tcard[index] = cardInfo;\n\t\tconsole.log(card);\n\t\tthis.refreshData(card);\n\t}\n\n\taddCard(cardInfo) {\n\t\tlet cardlist = this.state.cardList.concat();\n\t\tcardlist.push(cardInfo);\n\t\tthis.refreshData(cardlist);\n\t\t//console.log(cardlist);\n\t}\n\n\tdeleteCard(index) {\n\t\tlet cardlist = this.state.cardList.concat();\n\t\tcardlist.splice(index, 1);\n\t\tthis.refreshData(cardlist);\n\t}\n\n\tasync refreshData(cardList) {\n\t\tawait axios({\n\t\t\tmethod: \"post\",\n\t\t\turl: \"https://cardlist-manage.herokuapp.com/cards/update\",\n\t\t\t//url: \"http://localhost:3001/cards/update\",\n\t\t\tdata: { cardlist: cardList },\n\t\t}).then((result) => {\n\t\t\tthis.setState({ cardList });\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { cardList, isLoading } = this.state;\n\t\t//console.log(cardList);\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<div className=\"loading-bar\">\n\t\t\t\t\t\t<h1>Loading ...</h1>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<ButtonAppBar />\n\t\t\t\t\t\t<div className=\"card-list\">\n\t\t\t\t\t\t\t{Array.from(cardList).map((cardInfo, index) => {\n\t\t\t\t\t\t\t\tconsole.log(cardInfo, index);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<CardInfo\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tcardname={cardInfo.cardname}\n\t\t\t\t\t\t\t\t\t\tsummary={cardInfo.summary}\n\t\t\t\t\t\t\t\t\t\tbalance={cardInfo.balance}\n\t\t\t\t\t\t\t\t\t\ttotal={cardInfo.total}\n\t\t\t\t\t\t\t\t\t\tcolor={cardInfo.color}\n\t\t\t\t\t\t\t\t\t\tonChangeBalance={(cardInfo) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.handleChageBalance(cardInfo, index);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonDeleteCard={() => this.deleteCard(index)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t<ButtonAddCard onAddCard={(cardInfo) => this.addCard(cardInfo)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}